---
import Layout from '../layouts/Layout.astro';
---

<Layout title="">
	<div data-app>
		<div class="hidden" data-staging></div>
		<div class="rotator" data-rotator></div>

    <div class="controls -active" data-controls>
      <header>
        <div>
					<h1>Gif Wall</h1>
					<h2>Controls</h2>
				</div>
      </header>
      <p>
        Set the vibe at your party or gathering — bust out the projector and
        pull this baby up, go full-screen and let 'er rip!
      </p>
      <p>
        <em
          >After closing, click anywhere on the page to re-open the controls</em
        >
      </p>
      <form id="controlsForm" data-controls-form>
        <div>
          <label for="searchTerm">search term:</label>
          <input
            type="text"
            id="searchTerm"
            name="searchTerm"
            placeholder="ex: 'glitch art'"
          />
        </div>
				<div class="control-row">
					<div>
						<label for="rating" class="select-label">rating:</label>
						<div class="select-wrap">
							<select name="rating" id="rating">
								<option value="g">g</option>
								<option value="pg">pg</option>
								<option value="pg13">pg13</option>
								<option value="r">r</option>
							</select>
						</div>
					</div>

					<div class="grow">
						<label for="delayTime">interval time:</label>
						<input
							type="text"
							id="delayTime"
							name="delayTime"
							placeholder="in seconds, ex: '3.5'"
						/>
					</div>
				</div>
        <div class="control-row">
					<fieldset>
						<legend>image size:</legend>
						<div class="radio-wrap">
							<input
								id="fillscreen"
								name="layout"
								type="radio"
								value="fillscreen"
								checked="checked"
							/>
							<label for="fillscreen">fill screen</label>
						</div>
						<div class="radio-wrap">
							<input
								id="naturalRatio"
								name="layout"
								type="radio"
								value="natural-ratio"
							/>
							<label for="naturalRatio">natural ratio</label>
						</div>
					</fieldset>

					<div class="radio-wrap">
						<label for="fullscreen">enter fullscreen mode?</label>
						<input type="checkbox" id="fullscreen" name="fullscreen" />
					</div>
        </div>
        <div>
          <button type="submit">let's do this!</button>
        </div>
      </form>

			<button class="close" data-controls-close>close</button>
    </div>
	</div>
</Layout>
<script>
	import App from '../scripts/app.js';
	const element = document.querySelector('[data-app]');
	let GifWall = new App(element);
	GifWall.init();
</script>
<style is:global lang="scss">
	body.loaded .rotator {
		opacity: 1;
	}

	main {
		height: 100%;
		display: grid;
		place-items: center;
	}

	.hidden {
		width: 0;
		height: 0;
		z-index: -1;
		overflow: hidden;
		position: absolute;
		visibility: hidden;
	}

	.rotator {
		inset: 0;
		opacity: 0;
		overflow: hidden;
		max-height: 100vh;
		position: absolute;
		background: rgba(0, 0, 0, 0.1);
		transition: opacity .2s ease-out;
		
		img {
			block-size: 100%;
			inline-size: 100%;
			object-fit: cover;
			position: absolute;
			visibility: hidden;
			object-position: center center;

			&.current {
				visibility: visible;
			}
		}

		// Loading
		.-loading::before {
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			z-index: 1;
			content: '';
			position: absolute;
			background-color: rgba(170, 170, 170, 0.5);
		}

		&.natural-ratio img {
			top: auto;
			left: 50%;
			width: auto;
			height: 100%;
			min-width: 1px;
			transform: translateX(-50%);
		}
	}

	// Controls
	.controls {
		opacity: 0;
		width: 100%;
		padding: 20px;
		max-width: 600px;
		position: relative;
		background: #efefef;
		pointer-events: none;
		transition: opacity .2s ease-out;
		border: 2px solid rgba(0, 0, 0, 0.2);

		// Active State
		&.-active,
		&:focus-within {
			opacity: 1;
			z-index: 5;
			pointer-events: auto;
		}

		header {
			display: flex;
			column-gap: 6px;
			position: relative;
			margin-bottom: 10px;
			padding-bottom: 10px;
			justify-content: space-between;
			border-bottom: 2px solid rgba(0, 0, 0, 0.2);

			> div {
				display: flex;
				column-gap: 6px;
			}
		}

		h1,
		h2 {
			margin: 0;
			font-size: 1rem;
			font-weight: 700;
			display: inline-block;
		}

		h1 {
			color: #555;
		}
		h2 {
			color: #bbb;
		}

		p {
			margin-top: 0;
		}

		form {
			margin-top: 20px;

			.control-row {
				gap: 20px;
				display: flex;
				align-items: start;
				justify-content: space-between;
			}
			.grow {
				flex-grow: 1;
			}

			> div {
				margin-top: 20px;

				&:first-of-type {
					margin-top: 0;
				}
			}

			label {
				display: block;
				margin-bottom: 6px;
			}

			fieldset {
				margin: 0;
				padding: 0;
				border: none;
			}

			legend {
				padding: 0;
				margin-bottom: 1rem;
			}

			button {
				width: 100%;
				color: white;
				font-size: 1rem;
				cursor: pointer;
				margin-top: 20px;
				font-weight: 700;
				border-radius: 0;
				padding: 10px 20px;
				font-family: inherit;
				border: var(--border);
				outline-offset: 0.35em;
				background: var(--accent);
				transition: background .2s ease-out;

				&:hover,
				&:focus-visible {
					background: var(--accent-focus);
				}
			}

			input {
				width: 100%;
				display: block;
				font-size: 1rem;
				border-radius: 0;
				font-family: inherit;
				border: var(--border);
				outline-offset: 0.35em;
				
				&[type="text"] {
					padding: 10px;
					border-radius: 0;
					&:focus-visible {
						outline: none;
						border-color: var(--accent-focus);
					}
				}

				&[type="radio"],
				&[type="checkbox"] {
					width: 1.5rem;
					height: 1.5rem;
				}
			}

			.radio-wrap {
				gap: 6px;
				display: flex;
				align-items: center;

				+ .radio-wrap {
					margin-top: 0.5rem;
				}

				label,
				input {
					margin: 0;
					cursor: pointer;
					display: inline-block;
				}
			}

			.select-wrap {
				position: relative;
				display: inline-block;
				&::before {
					top: 2px;
					z-index: 0;
					right: 2px;
					bottom: 2px;
					content: '';
					width: 30px;
					background: #fff;
					position: absolute;
					pointer-events: none;
				}
				&::after {
					top: 2px;
					z-index: 1;
					right: 5px;
					bottom: 1px;
					content: '❮';
					position: absolute;
					pointer-events: none;
					transform: rotate(-90deg);
				}
			}

			select {
				font-size: 1rem;
				border-radius: 0;
				font-family: inherit;
				border: var(--border);
				display: inline-block;
				-webkit-appearance: none;
				padding: 10px 40px 10px 10px;

				&:focus-visible {
					outline: none;
					border-color: var(--accent-focus);
				}
			}
		}

		.close {
			top: 12px;
			right: 20px;
			border: none;
			cursor: pointer;
			font-size: 1rem;
			padding: 0.5rem;
			background: none;
			position: absolute;
			font-family: inherit;
			color: --var(primary);
			text-decoration: underline;
			text-underline-offset: 0.2em;

			&:hover,
			&:focus-visible {
				color: #555;
			}
		}

		// @media screen and (min-width: 900px) {
		// 	top: 50%;
		// 	left: 50%;
		// 	position: absolute;
		// 	transform: translate(-50%, -50%);
		// }
	}

	.spinner {
		top: 50%;
		left: 50%;
		z-index: 10;
		width: 50px;
		height: 50px;
		border-radius: 50%;
		position: absolute;
		margin: -25px 0 0 -25px;
		border-top: 3px solid #51D693;
		border-left: 3px solid #51D693;
		animation: spin .5s forwards infinite linear;
	}

	@keyframes spin {
		from {
			transform: rotate(0);
		}
		to {
			transform: rotate(360deg);
		}
	}
	.testing .staging.hidden {
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		z-index: 1;
		display: -ms-flexbox;
		display: flex;
		position: absolute;
		visibility: visible;
	}
	.testing .staging.hidden > * {
		flex-basis: 10%;
	}
</style>
